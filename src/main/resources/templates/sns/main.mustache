<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>왜 안돼시이이이이이이이이잉방바</title>
    <style>
        body {
            margin: 0;
            padding: 0;
            font-size: 16px;
            font-family: 'Helvetica Neue', sans-serif;
            color: #333;
        }

        header {
            background-color: #fff;
            border-bottom: 1px solid #ddd;
            height: 60px;
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 0 20px;
        }

        .header-title {
            font-size: 24px;
            font-weight: bold;
        }

        .auth {
            font-size: 18px;
        }

        .container {
            max-width: 700px;
            margin: 20px auto;
            padding: 20px;
        }

        .post-form textarea {
            width: 100%;
            height: 100px;
            border: 2px solid #ddd;
            border-radius: 4px;
            padding: 10px;
            font-size: 18px;
        }

        .post-form button {
            display: block;
            margin: 10px 0 0 auto;
            padding: 10px 20px;
            font-size: 18px;
            font-weight: bold;
            color: #fff;
            background-color: #3897f0;
            border: none;
            border-radius: 4px;
        }

        .post {
            margin-top: 20px;
            padding: 10px;
            display: flex;
            flex-direction: column;
            background-color: #fff;
            box-shadow: 0px 2px 4px #ddd;
        }

        .post-container {
            display: flex;
            flex-direction: column;
        }

        .post-text {
            font-size: 18px;
            margin-bottom: 10px;
        }

        .post img {
            width: 100%;
            margin-bottom: 10px;
        }

        .like-container {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .like-button {
            cursor: pointer;
            font-size: 16px;
            padding: 6px 10px;
            color: #8e8e8e;
            border: none;
            background-color: transparent;
            outline: none;
        }

        .like-button:hover {
            color: #222;
        }

        .like-counter {
            font-size: 16px;
            color: #8e8e8e;
            font-weight: bold;
        }
        .drop-area {
            border: 2px dashed #ccc;
            width: 100%;
            margin: 20px auto;
            text-align: center;
            padding: 20px;
        }
    </style>
</head>
<body>

{{>sns/header}}


<div class="container">
    {{#loginstatus}}
        <div class="post-form">
            <form method="post" action="/post" enctype="multipart/form-data">
                <div class="form-group">
                    <textarea name="content" placeholder="Write your post..." rows="5" cols="80"></textarea>
                </div>
                <div class="form-group">
                    <input type="file" name="images" multiple onchange="handleFiles(event, 'upload-gallery')" style="display: none;" id="file-input">

                    <div class="drop-area" ondragover="event.preventDefault()" ondrop="handleDrop(event)">
                        <p>드래그 앤 드롭 또는 클릭으로 파일 선택</p>
                    </div>
                    <div id="upload-gallery"></div>
                </div>
                <div class="form-group">
                    <button type="submit">Submit</button>
                </div>
            </form>
        </div>

<!--    {{#timeline}}-->
        <div class="post">
            <div class="post-container">
                <div class="post-text">{{text}}</div>
                {{#imageUrl}}
                    <img src="{{imageUrl}}" alt="" />
                {{/imageUrl}}
                <div class="like-container">
                    <button class="like-button" onclick="toggleLike(this)">좋아요</button>
                    <span class="like-counter">{{likes}}</span>
                </div>
            </div>
        </div>
<!--    {{/timeline}}-->
    {{/loginstatus}}
</div>

<script>
    async function addNewPost() {
        const postText = document.getElementById('post-text').value;
        if (postText.length === 0) return;

        const postImage = document.getElementById('post-image').files[0];
        let imageDataUrl = null;

        if (postImage) {
            imageDataUrl = await toBase64(postImage);
        }

        const post = document.createElement('div');
        post.classList.add('post');
        post.innerHTML = `
      <div class="post-container">
        <div class="post-text">${postText}</div>
        ${imageDataUrl ? `<img src="${imageDataUrl}" alt="업로드된 이미지">` : ''}
        <div class="like-container">
          <button class="like-button" onclick="toggleLike(this)">좋아요</button>
          <span class="like-counter">0</span>
        </div>
      </div>
  `;

        const timeline = document.getElementById('timeline');
        timeline.insertBefore(post, timeline.firstChild);

        document.getElementById('post-text').value = '';
        document.getElementById('post-image').value = '';
    }

    function toggleLike(button) {  }

    function toBase64(file) {
        return new Promise((resolve) => {
            const reader = new FileReader();
            reader.onload = (e) => resolve(e.target.result);
            reader.readAsDataURL(file);
        });
    }


    const fileInput = document.getElementById('file-input');
    const gallery = document.getElementById('upload-gallery');
    let allFiles = [];

    function handleDrop(event) {
        event.preventDefault();
        event.stopPropagation();

        const newFiles = event.dataTransfer.files;
        addFiles(newFiles);
        showFiles();
    }

    function handleFiles(event) {
        const newFiles = event.target.files;
        addFiles(newFiles);
        showFiles();
    }

    function addFiles(newFiles) {
        allFiles = [...allFiles, ...Array.from(newFiles)];
        updateFileInput();
    }

    function updateFileInput() {
        const dataTransfer = new DataTransfer();

        allFiles.forEach(file => dataTransfer.items.add(file));
        fileInput.files = dataTransfer.files;
    }

    function showFiles() {
        while (gallery.firstChild) {
            gallery.removeChild(gallery.firstChild);
        }

        allFiles.forEach(file => {
            const img = document.createElement('img');
            img.src = URL.createObjectURL(file);
            img.height = 60;
            img.onload = () => URL.revokeObjectURL(img.src);
            gallery.appendChild(img);
        });
    }

    fileInput.parentNode.onclick = () => fileInput.click();


    // var dropZone = document.getElementById('drop-zone');
    // dropZone.addEventListener('dragover', handleDragOver, false);
    // dropZone.addEventListener('drop', handleFileSelect, false);
    //
    // //파일 추가 클릭시 드랍존이 나타나도록 하기 위해 이벤트 클릭 추가
    // document.getElementById("drop-zone").addEventListener("click", function () {
    //     document.getElementById("fileInput").click();
    // });
    //
    // function handleDragOver(e) {
    //     e.preventDefault();
    //     e.stopPropagation();
    //     e.dataTransfer.dropEffect = 'copy';
    // }
    //
    // function handleFileSelect(e) {
    //     e.preventDefault();
    //     e.stopPropagation();
    //     var files = e.dataTransfer.files;
    //     for (var i = 0; i < files.length; i++) {
    //         var reader = new FileReader();
    //         reader.onload = function(e) {
    //             var img = document.createElement('img');
    //             img.src = e.target.result;
    //             img.width = 200;
    //             document.getElementById('preview').appendChild(img);
    //         }
    //         reader.readAsDataURL(files[i]);
    //     }
    // }
</script>
</body>
</html>